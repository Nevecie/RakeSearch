# include "boinc_api.h"

boinc_init();  //For sequential (single-threaded) app

int retval = boinc_resolve_filename_s(char *logical_name, std::string& physical_name);
if (retval) fail("can't resolve filename");
// дальше используем resolved_name.c_str()
// Don't use boinc_resolve_filename() for files with the copy_file attribute, 
// or for temporary files.

// Applications should replace fopen() calls with
boinc_fopen(char* path, char* mode);



int boinc_finish(int status);
// status is nonzero if an error was encountered. This call does not return. 
// Do not call exit(0). If you do, BOINC will restart the app, which is probably not what you want. 

// Alternatively, if you want to show a message to the user (e.g. because of an error condition that the user can remedy) use
// boinc_finish_message(int status, const char* msg, bool is_notice);
// If is_notice is true, the message will be shown as a notice in the GUI (works with 7.5+ clients; for others, no message will be shown). 
